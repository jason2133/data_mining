data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ.csv', header=True)
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ.csv', header=T)
head(data)
data[:, 1]
data[, 1]
data[, 2:5]
head(data[, 2:5])
head(data[, 3:20])
head(data[, 20])
head(data[, 20:21])
head(data[, 3:21])
head(data[, 3:22])
head(data[, 22:23])
data[, 24]
data[, 23:24]
# X Value: data[, 3:22]
head(data[, 3:22])
######
library(MASS)
# X Value: data[, 3:22]
X_data <- data[, 3:22]
X_data
head(X_data)
# Y Value: data[, 24]
Y_data <- data[, 24]
head(Y_data)
tail(X_data)
# Split: Train & Test
# 17520:26280
X_train <- X_data[17520:26280, :]
# Split: Train & Test
# 17520:26280
X_train <- X_data[17520:26280]
# Split: Train & Test
# 17520:26280
X_train <- X_data[17520:26280,]
head(X_train)
tail(X_train)
Y_train <- Y_data[17520:26280,]
Y_train <- Y_data[17520:26280]
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17520:26280
X_train <- X_data[17520:26279,]
head(X_train)
Y_train <- Y_data[17520:26279]
h
head(Y_train)
tail(X_train)
head(X_train)
tail(X_train)
Y_train <- Y_data[17520:26279]
head(Y_train)
tail(Y_train)
X_test <- X_data[26280:,]
X_test <- X_data[26280:]
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ.csv', header=T)
head(data)
tail(data)
X_test <- X_data[26280:35064,]
head(X_test)
tail(X_test)
Y_test <- Y_data[26280:35064]
head(Y_test)
tail(Y_test)
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ.csv', header=T)
head(data)
tail(data)
# X Value: data[, 3:22]
# head(data[, 3:22])
X_data <- data[, 3:22]
head(X_data)
# Y Value: data[, 24]
Y_data <- data[, 24]
head(Y_data)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17520:26280
X_train <- X_data[17520:26279,]
head(X_train)
tail(X_train)
Y_train <- Y_data[17520:26279]
head(Y_train)
tail(Y_train)
X_test <- X_data[26280:35064,]
head(X_test)
tail(X_test)
Y_test <- Y_data[26280:35064]
head(Y_test)
tail(Y_test)
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ.csv', header=T)
head(data)
tail(data)
# X Value: data[, 3:22]
# head(data[, 3:22])
X_data <- data[, 3:22]
head(X_data)
# Y Value: data[, 24]
Y_data <- data[, 24]
head(Y_data)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17520:26280
X_train <- X_data[17520:26279,]
head(X_train)
tail(X_train)
Y_train <- Y_data[17520:26279]
head(Y_train)
tail(Y_train)
X_test <- X_data[26280:35064,]
head(X_test)
tail(X_test)
Y_test <- Y_data[26280:35064]
head(Y_test)
tail(Y_test)
X_test <- X_data[26280:35064,]
head(X_test)
tail(X_test)
X_test <- X_data[26280:35063,]
head(X_test)
tail(X_test)
X_test <- X_data[26280:35064,]
head(X_test)
tail(X_test)
tail(Y_train)
X_test <- X_data[26280:35064,]
X_test <- X_data[26280:35064,]
head(X_test)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17520:26280
X_train <- X_data[17520:26279,]
head(X_train)
tail(X_train)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17520:26280
X_train <- X_data[17520:26279,]
head(X_train)
tail(X_train)
Y_train <- Y_data[17520:26279]
head(Y_train)
tail(Y_train)
X_test <- X_data[26280:35064,]
head(X_test)
tail(X_train)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17520:26280
X_train <- X_data[17520:26279,]
head(X_train)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17521:26280
X_train <- X_data[17521:26279,]
head(X_train)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17521:26280
X_train <- X_data[17521:26280,]
head(X_train)
tail(X_train)
Y_train <- Y_data[17521:26280]
head(Y_train)
tail(Y_train)
X_test <- X_data[26281:35064,]
head(X_test)
tail(X_test)
Y_test <- Y_data[26281:35064]
head(Y_test)
tail(Y_test)
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ.csv', header=T)
head(data)
tail(data)
# X Value: data[, 3:22]
# head(data[, 3:22])
X_data <- data[, 3:22]
head(X_data)
# Y Value: data[, 24]
Y_data <- data[, 24]
head(Y_data)
# Split: Train & Test
# Train: 2019
# Test: 2020
# 17521:26280
X_train <- X_data[17521:26280,]
head(X_train)
tail(X_train)
Y_train <- Y_data[17521:26280]
head(Y_train)
tail(Y_train)
# 26281:35064
X_test <- X_data[26281:35064,]
head(X_test)
tail(X_test)
Y_test <- Y_data[26281:35064]
head(Y_test)
tail(Y_test)
#####
fit.all = lm(Y_test ~., data=X_train)
#####
summary(X_train)
summary(Y_train)
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ_2.csv', header=T)
rm(list=ls())
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ_2.csv', header=T)
head(data)
tail(data)
# X Value: data[, 3:22]
# head(data[, 3:22])
X_data <- data[, 3:22]
train_data <- data[, 3:23]
head(train_data)
# Summary
summary(X_train)
summary(Y_train)
## Here we do!!!
train_data <- data[, 3:23]
head(train_data)
## Here we do!!!
train_data <- data[17521:26280, 3:23]
head(train_data)
tail(train_data)
fit.all <- lm(발전량 ~., data=train_data)
fit.step = step(fit.all, direction='both')
fit.step$anova
summary(fit.step)
rm(list=ls())
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ_2.csv', header=T)
head(data)
tail(data)
## Here we do!!!
train_data <- data[17521:26280, 3:23]
head(train_data)
tail(train_data)
fit.all <- lm(발전량 ~., data=train_data)
fit.step = step(fit.all, direction='both')
fit.step$anova
summary(fit.step)
rm(list=ls())
data <- read.csv('C:/Users/jason/바탕 화면/coding1/data_mining/Assignment/assignment2/kyungsang_univ_2.csv', header=T)
head(data)
tail(data)
## Here we do!!!
train_data <- data[17521:26280, 3:23]
head(train_data)
tail(train_data)
test_data <- data[26281:35064, 3:23]
head(test_data)
tail(test_data)
# Model Fitting
fit.all <- lm(발전량 ~., data=train_data)
fit.step = step(fit.all, direction='both')
fit.step$anova
summary(fit.step)
# Predicting
yhat = predict(fit.step, newdata = test_data, type='response')
head(yhat)
plot(test_data$발전량, yhat, xlim=c(0, 50), ylim=c(0, 50))
plot(test_data$발전량, yhat, xlim=c(0, 200), ylim=c(0, 200))
head(test_data)
tail(test_data)
summary(test_data)
plot(test_data$발전량, yhat, xlim=c(0, 750), ylim=c(0, 750))
abline(a=0, b=1)
# Evaluating
mean((test_data$발전량 - yhat)^2)
mean(abs(test_data$발전량 - yhat))
# Evaluating
mean((test_data$발전량 - yhat)^2) # MSE
sqrt(mean((test_data$발전량 - yhat)^2)) # RMSE
mean(abs(test_data$발전량 - yhat)) # MAE
cor(test_data$발전량, yhat) # PCC
data_train_plus_test <- data[17521:35064, 3:23]
summary(data_train_plus_test)
id = sample(1:V, nrow(data_train_plus_test), replace=T)
### Computing the CV error
V = 10
mse.train = 0
mse.test = 0
mae.train = 0
mae.test = 0
set.seed(2017)
id = sample(1:V, nrow(data_train_plus_test), replace=T)
### Computing the CV error
V = 10
mse.train = 0
mse.test = 0
mae.train = 0
mae.test = 0
set.seed(2017)
id = sample(1:V, nrow(data_train_plus_test), replace=T)
for(i in 1:V) {
print(i)
# Data Partitioning
test.index = which(id==i)
data.train = data_train_plus_test[-test.index,] # Train Data
data.test = data_train_plus_test[test.index,] # Test Data
# Fitting
fit.reg = lm(발전량 ~., data=data.train)
fit.step.reg = step(fit.reg, direction='both', trace=FALSE) # Stepwise variable selection
# Predicting and Evaluating
yhat.reg = predict(fit.step.reg, newdata = data.test, type='response')
mse.test = mse.test + mean((test_data$발전량 - yhat)^2) # MSE
mae.test = mae.test + mean(abs(test_data$발전량 - yhat)) # MAE
}
cv.mse.test = mse.test/V
cv.mae.test = mae.test/V
cv.mse.test
sqrt(cv.mse.test)
cv.mae.test
### Computing the CV error
V = 10
mse.train = 0
mse.test = 0
mae.train = 0
mae.test = 0
set.seed(2017)
id = sample(1:V, nrow(data_train_plus_test), replace=T)
for(i in 1:V) {
print(i)
# Data Partitioning
test.index = which(id==i)
data.train = data_train_plus_test[-test.index,] # Train Data
data.test = data_train_plus_test[test.index,] # Test Data
# Fitting
fit.reg = lm(발전량 ~., data=data.train)
fit.step.reg = step(fit.reg, direction='both', trace=FALSE) # Stepwise variable selection
# Predicting and Evaluating
yhat.reg = predict(fit.step.reg, newdata = data.test, type='response')
mse.test = mse.test + mean((test_data$발전량 - yhat)^2) # MSE
mae.test = mae.test + mean(abs(test_data$발전량 - yhat)) # MAE
}
cv.mse.test = mse.test/V
cv.mae.test = mae.test/V
cv.mse.test
sqrt(cv.mse.test)
cv.mae.test
